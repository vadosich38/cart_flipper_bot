# –ö–Ω–æ–ø–∫–∞ ‚Äú–û—Ç–º–µ–Ω–∏—Ç—å‚Äù –æ—Ç–º–µ–Ω—è–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏–ª–∏ –ø–∞—Ä—ã –≤ –Ω–µ–µ, –µ—Å–ª–∏ –∫–æ–ª–ª–µ–∫—Ü–∏—è —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞.
# –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞ –º–µ–Ω—è–µ—Ç—Å—è FSM: collection –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ —Å–ø–∏—Å–∫—É –∫–æ–ª–ª–µ–∫—Ü–∏–π, –∑–∞–ø—É—Å–∫–∞—è —Å—Ü–µ–Ω–∞–∞—Ä–∏–π collections_review_handlers2

from aiogram import F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter
import asyncio

from .collection_add_router import collection_add_router
from bot_set.bot_states import BotStates
from bot_set.collections_paginator_class import CollectionsPaginator
from keyboards.collections_paginator_ikb import get_collections_paginator_ikb


@collection_add_router.message(F.text.lower() == "–æ—Ç–º–µ–Ω–∏—Ç—å üî¥",
                               StateFilter(BotStates.collection_adding_get_name))
async def collection_add_cmd_handler(message: Message, state: FSMContext):
    await state.set_state(BotStates.collections_review)
    await message.answer(text="–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ üü•")

    coll_pag_inst = CollectionsPaginator(telegram_id=message.from_user.id)
    await asyncio.sleep(2)
    await message.edit_text(text=coll_pag_inst.start(),
                            reply_markup=get_collections_paginator_ikb())

    await state.set_data({"coll_pag_inst": coll_pag_inst})
