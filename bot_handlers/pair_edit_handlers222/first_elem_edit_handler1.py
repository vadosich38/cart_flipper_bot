# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–π —ç–ª–º–µ–Ω—Ç –∏–ª–∏ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ: ‚Äú–í—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç –ø–∞—Ä—ã: ‚Ä¶,
# –ø—Ä–∏—à–ª–∏—Ç–µ –Ω–∞ —á—Ç–æ –µ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ‚Äú–û—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π‚Äù.

from .edit_pair_router import edit_pair_router
from bot_set.bot_states import BotStates
from bot_set.data_formats_handlers import data_formats_handler_to_edit
from DBPackage.DBclass import DBMethods
from bot_set.data_formats_handlers import send_card_element
from keyboards.pair_edit_keyboard import get_pair_edit_kb
from bot_set.bot_object import card_flipper_bot

from aiogram import F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter


@edit_pair_router.message(F.text, StateFilter(BotStates.pair_editing_change_first_elem))
async def get_first_elem(message: Message, state: FSMContext) -> None:
    data = await state.get_data()
    cur_card_id = data["spec_coll_pag_inst"].cur_card_id

    #–ø–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
    #–∑–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –º–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î
    data_formats_handler_to_edit(message=message, card_id=cur_card_id, elem_numm=1)
    await message.answer(text="–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω! üü©\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏?")

    await state.set_state(BotStates.pair_editing_change_second_elem)

    cur_card = DBMethods.get_card_by_id(card_id=cur_card_id)
    send_card_element(user_id=message.from_user.id,
                      card_value=cur_card[3],
                      card_value_type=cur_card[4],
                      keyboard=get_pair_edit_kb())


@edit_pair_router.message(F.data == "no_changes", StateFilter(BotStates.pair_editing_change_first_elem))
async def first_elem_leave_unchanged(callback_data: CallbackQuery, state: FSMContext) -> None:
    await callback_data.answer(text="–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π! üü©")
    await state.set_state(BotStates.pair_editing_change_second_elem)
    card_flipper_bot.send_message(chat_id=callback_data.from_user.id,
                                  text="–ò–∑–º–µ–Ω–∏—Ç–µ –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ ‚¨áÔ∏è")

    data = await state.get_data()
    cur_card_id = data["spec_coll_pag_inst"].cur_card_id

    cur_card = DBMethods.get_card_by_id(card_id=cur_card_id)
    send_card_element(user_id=callback_data.from_user.id,
                      card_value=cur_card[3],
                      card_value_type=cur_card[4],
                      keyboard=get_pair_edit_kb())
