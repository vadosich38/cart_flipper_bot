#TODO: –ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –≤—Ç–æ—Ä–æ–π —ç–ª–º–µ–Ω—Ç –∏–ª–∏ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
# –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Ç–µ–∫—Å—Ç, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ.
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞—Ä—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∫ —Å–ø–∏—Å–∫—É –ø–∞—Ä –∫–æ–ª–ª–µ–∫—Ü–∏–∏,
# –º–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞ FSM: collection_editing.
from .edit_pair_router import edit_pair_router
from bot_set.bot_states import BotStates

from aiogram import F
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter
from aiogram.types import Message


@edit_pair_router.message(StateFilter(BotStates.pair_editing_change_second_elem))
async def get_second_elem(message: Message, state: FSMContext) -> None:
    #TODO: –ø–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç
    await message.answer(text="–í—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω! –í–∞—à–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞! üü©")
    await state.set_state(BotStates.collection_editing)
    #TODO: –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∫ —Å—Ü–µ–Ω–∞—Ä–∏—é collection_editing
    pass


@edit_pair_router.message(F.text.lower("–æ—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"), StateFilter(BotStates.pair_editing_change_second_elem))
async def first_elem_leave_unchanged(message: Message, state: FSMContext) -> None:
    await message.answer(text="–í—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π! –í–∞—à–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞! üü©")
    await state.set_state(BotStates.collection_editing)
    #TODO: –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∫ —Å—Ü–µ–Ω–∞—Ä–∏—é collection_editing
    pass

