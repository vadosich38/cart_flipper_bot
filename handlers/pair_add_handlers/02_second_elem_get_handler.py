#TODO: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ: ‚Äú–ü—Ä–∏—à–ª–∏—Ç–µ –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç –ø–∞—Ä—ã‚Äù. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å—ã–ª–∞–µ—Ç. –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è.
from .pair_add_router import pair_add_router
from bot_set.bot_states import BotStates
from keyboards.yes_no_ikb import get_yes_no_ikb
from keyboards.cancel_kb import get_cancel_kb

from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter
from aiogram.types import Message


@pair_add_router.message(StateFilter(BotStates.get_second_elem_new_pair_adding))
async def get_second_elem(message: Message, state: FSMContext) -> None:
    #TODO: —Å–º–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    await state.set_state(BotStates.set_mirror_mode_new_pair_adding)
    await message.answer(text="–≠—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ –∏–º–µ–µ—Ç –∑–µ—Ä–∫–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ? üëÅ‚Äçüó®",
                         reply_markup=get_yes_no_ikb())
    # –≤—ã–∑–æ–≤ –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ –º–æ–∂–µ—Ç –Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ –ø–µ—Ä–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã!
    # await message.answer(text="–ó–µ—Ä–∫–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –±—É–¥–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –æ–±–æ–∏—Ö "
    #                           "—Å—Ç–æ—Ä–æ–Ω –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ ‚ûø\n\n–ù–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–¥–∞–Ω–∏–µ 1: –ø–µ—Ä–µ–¥–∏—Ç–µ Apple –Ω–∞ —Ä—É—Å—Å–∫–∏–π, –∞ –∑–∞–¥–∞–Ω–∏–µ 2: "
    #                           "–ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —è–±–ª–æ–∫–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π üßë‚Äçüè´",
    #                      reply_markup=get_cancel_kb())
