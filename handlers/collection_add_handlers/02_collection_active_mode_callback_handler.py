#TODO: –¥–∞ - –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é, –Ω–µ—Ç - –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ: –ö–æ–ª–ª–µ–∫—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞/–Ω–µ –∞–∫—Ç–∏–≤–Ω–∞. –•–æ—Ç–∏—Ç–µ –µ–µ –Ω–∞–ø–æ–ª–Ω–∏—Ç—å?

from aiogram.types import CallbackQuery
from aiogram import F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext

from .collection_add_router import collection_add_router
from bot_set.bot_states import BotStates
from bot_set.bot_object import cart_flipper_bot
from keyboards.yes_no_ikb import get_yes_no_ikb


@collection_add_router.callback_query(F.data == "yes", StateFilter(BotStates.collection_adding_get_active_mode))
async def collection_activate_callback(callback_data: CallbackQuery, state: FSMContext):
    await callback_data.answer(text="–ö–æ–ª–ª–µ–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! üü¢")
    await cart_flipper_bot.send_message(chat_id=callback_data.from_user.id,
                                        text="–ö–æ–ª–ª–µ–∫—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞ üü©\n\n"
                                             "–•–æ—Ç–∏—Ç–µ –µ–µ –Ω–∞–ø–æ–ª–Ω–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏? üìÇ",
                                        reply_markup=get_yes_no_ikb())
    await state.set_state(BotStates.collection_adding_get_fill_decision)


@collection_add_router.callback_query(F.data == "no", StateFilter(BotStates.collection_adding_get_active_mode))
async def collection_deactivate_callback(callback_data: CallbackQuery, state: FSMContext):
    await callback_data.answer(text="–ö–æ–ª–ª–µ–∫—Ü–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞! üî¥")
    await cart_flipper_bot.send_message(chat_id=callback_data.from_user.id,
                                        text="–ö–æ–ª–ª–µ–∫—Ü–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–π üü•\n\n"
                                             "–•–æ—Ç–∏—Ç–µ –µ–µ –Ω–∞–ø–æ–ª–Ω–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏? üìÇ",
                                        reply_markup=get_yes_no_ikb())
    await state.set_state(BotStates.collection_adding_get_fill_decision)

