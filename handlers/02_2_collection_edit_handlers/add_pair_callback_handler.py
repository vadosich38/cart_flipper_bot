#TODO: –ö–Ω–æ–ø–∫–∞ ‚Äú–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –ø–∞—Ä—É‚Äù:
# –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞ –º–µ–Ω—è–µ—Ç—Å—è FSM: pair_adding
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –∫–Ω–æ–ø–∫—É ‚Äú–û—Ç–º–µ–Ω–∏—Ç—å‚Äù
# –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å—Ü–µ–Ω–∞—Ä–∏–π 02_02_01_pair_add_handlers

from aiogram import F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter

from .collection_edit_router import collection_edit_router
from bot_set.bot_states import BotStates
from keyboards.cancel_kb import get_cancel_kb
from bot_set.bot_object import cart_flipper_bot


@collection_edit_router.callback_query(F.data == "add_new_card",
                                       StateFilter(BotStates.collection_editing))
async def add_new_paar_callback(callback_data: CallbackQuery, state: FSMContext):
    #–∑–∞–ø—É—Å–∫–∞–µ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–π 02_02_01_pair_add_handlers
    await state.set_state(BotStates.get_first_elem_new_pair_adding)
    await callback_data.answer(text="–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É üü¢")
    await cart_flipper_bot.send_message(chat_id=callback_data.from_user.id,
                                        text="–ü—Ä–∏—à–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ üìÇ",
                                        reply_markup=get_cancel_kb())
